name: Deploy AWS Lambda via Terraform

on:
  # Acionamento automático em tags
  push:
    tags:
      - "v*.*.*"

  # Execução manual
  workflow_dispatch:
    inputs:
      tf_action:
        description: "Escolha a ação do Terraform"
        required: true
        default: "apply"
        type: choice
        options:
          - plan
          - apply
          - destroy

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configurar AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::114284751948:role/GitHubActionsTerraformRole
          aws-region: us-east-1

      - name: Instalar dependências de sistema
        run: |
          sudo apt-get update
          sudo apt-get install -y libfreetype6-dev liblcms2-dev

      - name: Instalar dependências Python
        run: |
          pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Gerar ZIP do Lambda
        run: |
          mkdir temp_package
          pip install --platform manylinux2014_x86_64 --only-binary=:all: -r src/requirements.txt --target temp_package
          cp src/create-garantia.py temp_package/
          cp src/template-garantia.txt temp_package/
          cp src/logo-backgroud.png temp_package/
          cd temp_package
          zip -r ../lambda_function_payload.zip .
          cd ..

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Plan
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tf_action == 'plan' }}
        working-directory: infra
        run: |
          terraform init
          terraform plan \
            -var="lambda_version=manual-run" \
            -var="email_smtp=${{ secrets.EMAIL_SMTP }}" \
            -var="pass_smtp=${{ secrets.PASS_SMTP }}"

      # Rodará se for push de tag (event == push), OU for manual e a pessoa escolheu tf_action=apply
      - name: Terraform Apply
        if: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.tf_action == 'apply') }}
        working-directory: infra
        run: |
          terraform init
          terraform apply -auto-approve \
            -var="lambda_version=${{ github.ref_name }}" \
            -var="email_smtp=${{ secrets.EMAIL_SMTP }}" \
            -var="pass_smtp=${{ secrets.PASS_SMTP }}"

      - name: Terraform Destroy
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tf_action == 'destroy' }}
        working-directory: infra
        run: |
          terraform init
          terraform destroy -auto-approve \
            -var="lambda_version=manual-run" \
            -var="email_smtp=${{ secrets.EMAIL_SMTP }}" \
            -var="pass_smtp=${{ secrets.PASS_SMTP }}"
